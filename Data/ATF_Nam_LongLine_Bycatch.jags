 
model{
  
  # PRIORS FOR REGRESSION PARAMETERS
  intercept.occu ~ dnorm(0, 0.01)  ## intercept for occurrence of bycatch
  intercept.abund ~ dnorm(0, 0.01)  ## intercept for quantity of bycatch

  #treat.occu ~ dnorm(0, 0.01)
  treat.abund ~ dnorm(0, 0.01)
  
  
  # RANDOM TRIP EFFECTS FOR OCCURRENCE AND ABUNDANCE
  for(t in 1:ntrips){
    occ.trip[t]~dnorm(0,tau.occ.trip)    ## trip-specific random effect for occurrence
    abund.trip[t]~dnorm(0,tau.ab.trip)    ## trip-specific random effect for abundance
  }
  tau.occ.trip<-1/(sigma.occ.trip*sigma.occ.trip)
  sigma.occ.trip~dunif(0,10)
  tau.ab.trip<-1/(sigma.ab.trip*sigma.ab.trip)
  sigma.ab.trip~dunif(0,10)
  
  # RANDOM VESSEL EFFECTS FOR OCCURRENCE AND ABUNDANCE
  for(t in 1:nships){
    occ.ship[t]~dnorm(0,tau.occ.ship)    ## ship-specific random effect for occurrence
    abund.ship[t]~dnorm(0,tau.ab.ship)    ## ship-specific random effect for abundance
  }
  tau.occ.ship<-1/(sigma.occ.ship*sigma.occ.ship)
  sigma.occ.ship~dunif(0,10)
  tau.ab.ship<-1/(sigma.ab.ship*sigma.ab.ship)
  sigma.ab.ship~dunif(0,10)
  

  ####  ESTIMATE OBSERVED HOOKS (NO DATA FOR FAO OBSERVERS)
  ## obsHook are provided data for 2 data sets, but NA for the third data set - need to interpolate

  prop.obs~dunif(0,1)   #### PRIOR FOR RATIO OF OBSERVED HOOKS

  for(i in 1:Nobs){
    
    # define the logistic regression model, where psi is the probability of bycatch occurring at all
    obsHook[i] ~ dbin(prop.obs,retrHook[i])

  } ## end loop over each observation that has  
  
  
  #### LIKELIHOOD LOOP OVER  every set of longlines

  for(i in 1:N){
    
    # define the logistic regression model, where psi is the probability of bycatch occurring at all
    logit(psi[i]) <- intercept.occu + log(-(obsHook[i]/(1-obsHook[i]))) + occ.trip[trip[i]] + occ.ship[ship[i]] #+ treat.occu*REGULATION[i]
    z[i]~dbern(psi[i])
    
    # define the poisson regression model for abundance and multiply with bycatch probability
    mortality[i] ~ dpois(phi[i])
    phi[i]<-lambda[i]*z[i]
    log(lambda[i])<- log(obsHook[i]) + intercept.abund + treat.abund*REGULATION[i] + abund.trip[trip[i]] + abund.ship[ship[i]]
    
  } ## end loop over each observation
  
  
  # BACKTRANSFORM REGULATION PARAMETERS
  #treat.effect.occu<- exp(treat.occu)/(1+exp(treat.occu))
  treat.effect.rate<- exp(treat.abund)
  
  
  ## Computation of fit statistic (Bayesian p-value)
  
  for(i in 1:N){
    
    # Actual data
    sd.resi[i]<-sqrt(phi[i]*(1-psi[i])) +0.5
    E[i]<-(mortality[i]-phi[i])/ sd.resi[i]
    E2[i] <- pow(E[i],2)
    
    # Replicate data
    M.new[i]~dpois(phi[i])
    E.new[i]<-(M.new[i]-phi[i])/sd.resi[i]
    E2.new[i] <- pow(E.new[i], 2)
  }
  
  fit <- sum(E2[])              ### Sum up squared residuals for actual data set
  fit.new <- sum(E2.new[])      ### Sum up squared residuals for replicate data sets
  
  
  
} ## end model
    